generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model jwt_tokens {
  id         Int       @id @default(autoincrement())
  user_id    Int
  token      String    @db.Text
  expires_at DateTime  @db.DateTime(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "jwt_tokens_ibfk_1")

  @@index([user_id], map: "user_id")
}

model landing_page_content {
  id           Int      @id @default(autoincrement())
  section_name String   @db.VarChar(100)
  content      String?  @db.Text
  image_url    String?  @db.VarChar(2083)
  is_active    Boolean? @default(true)
  order_index  Int?     @default(0)
}

model roles {
  id         Int          @id @default(autoincrement())
  name       String       @unique(map: "name") @db.VarChar(50)
  user_roles user_roles[]
}

model user_roles {
  user_id Int
  role_id Int
  users   users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_roles_ibfk_1")
  roles   roles @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_roles_ibfk_2")

  @@id([user_id, role_id])
  @@index([role_id], map: "role_id")
}

model users {
  id            Int          @id @default(autoincrement())
  email         String       @unique(map: "email") @db.VarChar(255)
  username      String?      @unique(map: "username") @db.VarChar(100)
  password_hash String       @db.VarChar(255)
  created_at    DateTime?    @default(now()) @db.Timestamp(0)
  updated_at    DateTime?    @default(now()) @db.Timestamp(0)
  jwt_tokens    jwt_tokens[]
  user_roles    user_roles[]
}
